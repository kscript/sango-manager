{"version":3,"file":"js/shp.bcd9d3ef.js","mappings":"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","sources":["webpack://sango-manager/./src/utils/shp/index.js","webpack://sango-manager/./src/views/ShpView.vue","webpack://sango-manager/./src/views/ShpView.vue?fd93"],"sourcesContent":["export const r5g6b5toRGB = (r5g6b5) => {\r\n  return [\r\n    ((r5g6b5 & 0xF800) >> 11) * 255 / 0x1F,\r\n    ((r5g6b5 & 0x07E0) >> 5) * 255 / 0x3F,\r\n    ((r5g6b5 & 0x001F)) * 255 / 0x1F\r\n  ].map(item => Math.floor(item))\r\n}\r\n\r\nexport const putImageData = (ctx, data, Width, Height) => {\r\n  const imageData = ctx.createImageData(Width, Height)\r\n  imageData.data.forEach((item, index) => {\r\n    imageData.data[index] = data[index]\r\n  })\r\n  ctx.putImageData(imageData, 0, 0)\r\n}\r\n\r\nexport const createCanvas = (Width, Height) => {\r\n  const { cache } = createCanvas\r\n  if (cache) {\r\n    cache.ctx.clearRect(0, 0, cache.Width, cache.Height)\r\n    cache.canvas.width = Width\r\n    cache.canvas.height = Height\r\n    return createCanvas.cache\r\n  }\r\n  const canvas = document.createElement('canvas')\r\n  canvas.width = Width || 300\r\n  canvas.height = Height || 300\r\n  const ctx = canvas.getContext('2d')\r\n  createCanvas.cache = { canvas, ctx }\r\n  return createCanvas.cache\r\n}\r\n\r\nexport const getBlobUrl = async (canvas, type = 'image/png') => {\r\n  return new Promise(resolve => {\r\n    canvas.toBlob(blob => {\r\n      const url = URL.createObjectURL(blob)\r\n      resolve(url)\r\n    }, type)\r\n  })\r\n}\r\n\r\nexport const parseShp = async (shpfile) => {\r\n  const result = {}\r\n  if (shpfile instanceof ArrayBuffer) {\r\n    let Width\r\n    let Height\r\n    let PosX\r\n    let PosY\r\n    let Line\r\n    let Index\r\n    let Head\r\n    let offset\r\n    let over = 0\r\n    const br = new DataView(shpfile)\r\n    if (shpfile.byteLength > 36) {\r\n      Head = [br.getUint8(0), br.getUint8(1), br.getUint8(2), br.getUint8(3)]\r\n    } else {\r\n      Head = [0, 0, 0, 0]\r\n    }\r\n\r\n    if (Head[0] === 84 && Head[1] === 76 && Head[2] === 72 && Head[3] === 83) {\r\n      Index = br.getUint8(13)\r\n      Width = br.getUint16(20, 1)\r\n      Height = br.getUint16(24, 1)\r\n      PosX = br.getUint16(28, 1)\r\n      PosY = br.getUint16(32, 1)\r\n      offset = Index ? 80 : 36\r\n      Line = new Array(Height)\r\n      let lineIndex = 0\r\n      for (let l = 0; l < Line.length; l++) {\r\n        Line[l] = br.getUint16(offset, 1)\r\n        if (l > 0 && lineIndex && lineIndex > Line[l]) {\r\n          over++\r\n          lineIndex = 0\r\n        } else {\r\n          lineIndex = Line[l]\r\n        }\r\n        Line[l] = Line[l] + over * 65536\r\n        offset += 4\r\n      }\r\n      const rows = new Array(Height).fill(0).map(item => new Array(Width).fill([0, 0, 0, 0]))\r\n\r\n      for (let l = 0; l < Line.length; l++) {\r\n        if (Index) {\r\n          let offsetIndex = Line[l]\r\n          while (br.getUint16(offsetIndex + 2, 1) !== 65535) {\r\n            const length = br.getUint16(offsetIndex, 1) % (Width + 1)\r\n            const begin = br.getUint16(offsetIndex + 2, 1)\r\n            const colorIndex = br.getUint32(offsetIndex + 4, 1)\r\n            for (let i = begin, num = 0; i < begin + length; i++) {\r\n              const r5g6b5 = br.getUint16(colorIndex + num, 1)\r\n              rows[l][i] = r5g6b5toRGB(r5g6b5).concat(255)\r\n              num += 2\r\n            }\r\n            offsetIndex += 8\r\n          }\r\n        } else {\r\n          let offsetIndex = Line[l]\r\n          while (br.getUint16(offsetIndex, 1) !== 65535) {\r\n            const begin = br.getUint16(offsetIndex, 1)\r\n            const length = br.getUint16(offsetIndex + 2, 1) % (Width + 1)\r\n            offsetIndex += 2\r\n            for (let i = begin; i < begin + length; i++) {\r\n              const r5g6b5 = br.getUint16(offsetIndex, 1)\r\n              rows[l][i] = r5g6b5toRGB(r5g6b5).concat(255)\r\n              offsetIndex += 2\r\n            }\r\n            offsetIndex += 2\r\n          }\r\n        }\r\n      }\r\n      const { ctx, canvas } = createCanvas(Width, Height)\r\n      putImageData(ctx, rows.flat().flat(), Width, Height)\r\n      const url = await getBlobUrl(canvas)\r\n      Object.assign(result, {\r\n        url,\r\n        Width,\r\n        Height,\r\n        PosX,\r\n        PosY\r\n      })\r\n    }\r\n  }\r\n  return result\r\n}\r\n","<template>\r\n  <el-container>\r\n    <el-main>\r\n      <el-row>\r\n        <el-upload class=\"el-button el-button--text\" :before-upload=\"onBeforeUpload\" :show-file-list=\"false\" webkitdirectory multiple>\r\n          <template #trigger>\r\n            <el-button type=\"success\">\r\n              <span class=\"text--white\">\r\n                选择shp文件\r\n              </span>\r\n            </el-button>\r\n          </template>\r\n        </el-upload>\r\n        <el-button type=\"danger\" @click=\"onClear\">清除</el-button>\r\n      </el-row>\r\n      <template v-if=\"files.length\">\r\n        <el-divider></el-divider>\r\n        <el-card shadow=\"never\" border-style=\"none\">\r\n          <div class=\"scroll\">\r\n            <el-image v-for=\"file in files\" :key=\"file.url\" class=\"file\" :class=\"{ active: active === file }\" :src=\"file.url\" :title=\"file.file.name\" @click=\"showfileInfo(file)\"></el-image>\r\n          </div>\r\n        </el-card>\r\n      </template>\r\n    </el-main>\r\n    <el-aside>\r\n      <el-card v-if=\"active\" shadow=\"never\" border-style=\"none\">\r\n        <template #header>\r\n          <div style=\"padding: 10px;\">\r\n            {{ active.file.name }}\r\n          </div>\r\n        </template>\r\n        <pre style=\"overflow: auto;\">{{ JSON.stringify(formatInfo(active), null, 2) }}</pre>\r\n      </el-card>\r\n    </el-aside>\r\n  </el-container>\r\n</template>\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { parseShp } from '@/utils/shp'\r\n\r\nconst files = ref([])\r\nconst active = ref(null)\r\nconst onBeforeUpload = async (file) => {\r\n  if (!/\\.shp$/i.test(file.name)) return false\r\n  const data = await parseShp(await file.arrayBuffer())\r\n  files.value = files.value.concat({\r\n    ...data,\r\n    file\r\n  })\r\n  return false\r\n}\r\nconst showfileInfo = (file) => {\r\n  active.value = active.value === file ? null : file\r\n  active.value && console.log(formatInfo(file))\r\n}\r\nconst formatInfo = (file) => {\r\n  const { Width, Height, PosX, PosY, url } = file\r\n  return { Width, Height, PosX, PosY, url }\r\n}\r\nconst onClear = () => {\r\n  files.value = []\r\n  active.value = null\r\n}\r\nwindow.addEventListener('keydown', (e) => {\r\n  if (e.key === 'Escape') {\r\n    active.value = null\r\n  } else\r\n  if (active.value && [37, 39].includes(e.keyCode)) {\r\n    const index = files.value.findIndex(item => active.value === item)\r\n    if (e.keyCode === 37 && index > 0) {\r\n      active.value = files.value[index - 1]\r\n    } else if (e.keyCode === 39 && index < files.value.length - 1) {\r\n      active.value = files.value[index + 1]\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.el-container {\r\n  --el-main-padding: 0;\r\n  .scroll {\r\n    max-height: 600px;\r\n    overflow: auto;\r\n  }\r\n  .file {\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    &.active {\r\n      background: #eee;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ShpView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShpView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShpView.vue?vue&type=style&index=0&id=560545d6&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-560545d6\"]])\n\nexport default __exports__"],"names":["r5g6b5toRGB","r5g6b5","map","item","Math","floor","putImageData","ctx","data","Width","Height","imageData","createImageData","forEach","index","createCanvas","cache","clearRect","canvas","width","height","document","createElement","getContext","getBlobUrl","async","type","Promise","resolve","toBlob","blob","url","URL","createObjectURL","parseShp","result","shpfile","ArrayBuffer","PosX","PosY","Line","Index","Head","offset","over","br","DataView","byteLength","getUint8","getUint16","Array","lineIndex","l","length","rows","fill","offsetIndex","begin","colorIndex","getUint32","i","num","concat","flat","Object","assign","files","ref","active","onBeforeUpload","test","file","name","arrayBuffer","value","showfileInfo","console","log","formatInfo","onClear","window","addEventListener","e","key","includes","keyCode","findIndex","__exports__"],"sourceRoot":""}